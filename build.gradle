plugins {
  id 'java'
  id 'idea'
  alias libs.plugins.spring.boot
  alias libs.plugins.spring.dependency.management
}

group = 'dev.lorentzen.branch'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(23)
  }
}

repositories {
  mavenCentral()
}

configurations {
  integrationApi.extendsFrom testApi
  integrationCompile.extendsFrom testCompile
  integrationImplementation.extendsFrom testImplementation
  integrationRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
  implementation libs.bundles.spring.boot.starter
  testImplementation libs.spring.boot.starter.test
}

sourceSets {
  integration {
    java {
      srcDirs = ['src/integration/java']
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
    }
    resources.srcDirs = main.resources.srcDirs + test.resources.srcDirs + ['src/integration/resources']
  }
}

idea {
  module {
    testSources.from(sourceSets.integration.java.srcDirs)
  }
}

springBoot {
  buildInfo()
}

def integrationTest = tasks.register('integrationTest', Test) {
  group 'verification'
  testClassesDirs = sourceSets.integration.output.classesDirs
  classpath = sourceSets.integration.runtimeClasspath
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
  testLogging {
    events 'passed', 'skipped', 'failed'
  }
}

tasks.named('check') {
  dependsOn(integrationTest)
}

tasks.configureEach {
  if (it instanceof JavaForkOptions) {
    it.systemProperties System.properties
  }
}
